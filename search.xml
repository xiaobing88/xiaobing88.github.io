<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Nvidia Jetson TX2 安装-使用]]></title>
    <url>%2F2018%2F01%2F25%2FNvidia-Jetson-TX2-%E5%AE%89%E8%A3%85-%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[事前准备 程序：https://pan.baidu.com/s/1jJbnq1w（运行其中一个即可） 一台Ubuntu16的PC主机 一个Jetson TX2开发板(尽量买个[USB]分线器吧，开发板上就只有一个USB接口) 视频教程https://www.youtube.com/watch?v=D7lkth34rgM]]></content>
  </entry>
  <entry>
    <title><![CDATA[Python图片处理模块skimage]]></title>
    <url>%2F2018%2F01%2F25%2FPython%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86%E6%A8%A1%E5%9D%97skimage%2F</url>
    <content type="text"><![CDATA[安装skimage模块1pip install scikit-image 方法函数123&gt;&gt;&gt; import skimage&gt;&gt;&gt; dir(skimage)['_INPLACE_MSG', '_STANDARD_MSG', '__SKIMAGE_SETUP__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', '__version__', '__warningregistry__', '_raise_build_error', '_shared', '_test', 'data_dir', 'doctest', 'doctest_verbose', 'dtype_limits', 'img_as_bool', 'img_as_float', 'img_as_int', 'img_as_ubyte', 'img_as_uint', 'pkg_dir', 'test', 'test_verbose', 'util'] 用法-帮助123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105&gt;&gt;&gt; help(skimage)Help on package skimage:NAME skimage - Image Processing SciKit (Toolbox for SciPy)DESCRIPTION ``scikit-image`` (a.k.a. ``skimage``) is a collection of algorithms for image processing and computer vision. The main package of ``skimage`` only provides a few utilities for converting between image data types; for most features, you need to import one of the following subpackages: Subpackages ----------- color Color space conversion. data Test images and example data. draw Drawing primitives (lines, text, etc.) that operate on NumPy arrays. exposure Image intensity adjustment, e.g., histogram equalization, etc. feature Feature detection and extraction, e.g., texture analysis corners, etc. filters Sharpening, edge finding, rank filters, thresholding, etc. graph Graph-theoretic operations, e.g., shortest paths. io Reading, saving, and displaying images and video. measure Measurement of image properties, e.g., similarity and contours. morphology Morphological operations, e.g., opening or skeletonization. novice Simplified interface for teaching purposes. restoration Restoration algorithms, e.g., deconvolution algorithms, denoising, etc. segmentation Partitioning an image into multiple regions. transform Geometric and other transforms, e.g., rotation or the Radon transform. util Generic utilities. viewer A simple graphical user interface for visualizing results and exploring parameters. Utility Functions ----------------- img_as_float Convert an image to floating point format, with values in [0, 1]. img_as_uint Convert an image to unsigned integer format, with values in [0, 65535]. img_as_int Convert an image to signed integer format, with values in [-32768, 32767]. img_as_ubyte Convert an image to unsigned byte format, with values in [0, 255].PACKAGE CONTENTS _build _shared (package) color (package) data (package) draw (package) exposure (package) external (package) feature (package) filters (package) future (package) graph (package) io (package) measure (package) morphology (package) novice (package) restoration (package) run-hessian scripts (package) segmentation (package) setup transform (package) util (package) viewer (package)FUNCTIONS test = _test(doctest=False, verbose=False) This would run all unit tests, but nose couldn't be imported so the test suite can not run.DATA __SKIMAGE_SETUP__ = False __warningregistry__ = &#123;'version': 0, ("the imp module is deprecated in... data_dir = r'C:\Python36\lib\site-packages\skimage\data' doctest = functools.partial(&lt;function _test at 0x000001912DC78598&gt;, do... doctest_verbose = functools.partial(&lt;function _test at 0x000001912DC78... pkg_dir = r'C:\Python36\lib\site-packages\skimage' test_verbose = functools.partial(&lt;function _test at 0x000001912DC78598...VERSION 0.13.1FILE c:\python36\lib\site-packages\skimage\__init__.py 示例123#求图片均值imgs = skimage.io.imread(file_name)ttt = np.mean(imgs)]]></content>
  </entry>
  <entry>
    <title><![CDATA[git提交LF will be replaced by CRLF 错误]]></title>
    <url>%2F2018%2F01%2F23%2Fgit%E6%8F%90%E4%BA%A4LF-will-be-replaced-by-CRLF-%E9%94%99%E8%AF%AF%2F</url>
    <content type="text"><![CDATA[当我使用hexo d -g时出现错误，12warning: LF will be replaced by CRLF in tags/index.html.The file will have its original line endings in your working directory. 接下来四步即可： git config core.autocrlf truegit config –global core.autocrlf truegit config –global core.autocrlf inputgit config –global core.autocrlf false]]></content>
      <categories>
        <category>电脑故障</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python的工作路径问题]]></title>
    <url>%2F2018%2F01%2F23%2FPython%E7%9A%84%E5%B7%A5%E4%BD%9C%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[python文件路径谨慎使用中文路径。Windows下路径使用反斜杠\，python中反斜杠\有转义功能。 路径使用斜杠/ 转义反斜杠\ 原始字符串raw string r”……” python 绝对路径、相对路径绝对路径 os.path.abspath(“文件名”)相对路径 os.path.dirname(“文件名”) python 在不同层级目录import 模块 sys.path添加import目录 导入模块关键是能够根据sys.path环境变量的 Django的搜索路径与Import机制 Python 中，每个 py 文件被称之为模块，每个具有 init.py 文件的目录被称为包。只要模块或者包所在的目录在 sys.path 中，就可以使用 import 模块或 import 包来使用。]]></content>
      <categories>
        <category>电脑故障</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows包管理工具Chocolatey]]></title>
    <url>%2F2018%2F01%2F13%2FWindows%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Chocolatey%2F</url>
    <content type="text"><![CDATA[相当于Ubuntu下的apt-get、Centos下的yum https://chocolatey.org/packages 使用命令行得到choco的使用帮助。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165λ choco /?This is a listing of all of the different things you can pass to choco.Commands * list - lists remote or local packages * search - searches remote or local packages (alias for list) * info - retrieves package information. Shorthand for choco search pkgname --exact --verbose * install - installs packages from various sources * pin - suppress upgrades for a package * outdated - retrieves packages that are outdated. Similar to upgrade all --noop * upgrade - upgrades packages from various sources * uninstall - uninstalls a package * pack - packages up a nuspec to a compiled nupkg * push - pushes a compiled nupkg * new - generates files necessary for a chocolatey package from a template * source - view and configure default sources * sources - view and configure default sources (alias for source) * config - Retrieve and configure config file settings * feature - view and configure choco features * features - view and configure choco features (alias for feature) * apikey - retrieves or saves an apikey for a particular source * setapikey - retrieves or saves an apikey for a particular source (alias for apikey) * unpackself - have chocolatey set itself up * version - [DEPRECATED] will be removed in v1 - use `choco outdated` or `cup &lt;pkg|all&gt; -whatif` instead * update - [DEPRECATED] RESERVED for future use (you are looking for upgrade, these are not the droids you are looking for)Please run chocolatey with `choco command -help` for specific help on each command.How To Pass Options / SwitchesYou can pass options and switches in the following ways: * Unless stated otherwise, an option/switch should only be passed one time. Otherwise you may find weird/non-supported behavior. * `-`, `/`, or `--` (one character switches should not use `--`) * **Option Bundling / Bundled Options**: One character switches can be bundled. e.g. `-d` (debug), `-f` (force), `-v` (verbose), and `-y` (confirm yes) can be bundled as `-dfvy`. * NOTE: If `debug` or `verbose` are bundled with local options (not the global ones above), some logging may not show up until after the local options are parsed. * **Use Equals**: You can also include or not include an equals sign `=` between options and values. * **Quote Values**: When you need to quote an entire argument, such as when using spaces, please use a combination of double quotes and apostrophes (`"'value'"`). In cmd.exe you can just use double quotes (`"value"`) but in powershell.exe you should use backticks (`` `"value`" ``) or apostrophes (`'value'`). Using the combination allows for both shells to work without issue, except for when the next section applies. * **Periods in PowerShell**: If you need to pass a period as part of a value or a path, PowerShell doesn't always handle it well. Please quote those values using "Quote Values" section above. * **Pass quotes in arguments**: When you need to pass quoted values to to something like a native installer, you are in for a world of fun. In cmd.exe you must pass it like this: `-ia "/yo=""Spaces spaces"""`. In PowerShell.exe, you must pass it like this: `-ia '/yo=""Spaces spaces""'`. No other combination will work. In PowerShell.exe if you are on version v3+, you can try `--%` before `-ia` to just pass the args through as is, which means it should not require any special workarounds. * Options and switches apply to all items passed, so if you are installing multiple packages, and you use `--version=1.0.0`, choco is going to look for and try to install version 1.0.0 of every package passed. So please split out multiple package calls when wanting to pass specific options.Default Options and Switches -?, --help, -h Prints out the help menu. -d, --debug Debug - Show debug messaging. -v, --verbose Verbose - Show verbose messaging. Very verbose messaging, avoid using under normal circumstances. --trace Trace - Show trace messaging. Very, very verbose trace messaging. Avoid except when needing super low-level .NET Framework debugging. Available in 0.10.4+. --acceptlicense, --accept-license AcceptLicense - Accept license dialogs automatically. Reserved for future use. -y, --yes, --confirm Confirm all prompts - Chooses affirmative answer instead of prompting. Implies --accept-license -f, --force Force - force the behavior. Do not use force during normal operation - it subverts some of the smart behavior for commands. --noop, --whatif, --what-if NoOp / WhatIf - Don't actually do anything. -r, --limitoutput, --limit-output LimitOutput - Limit the output to essential information --timeout, --execution-timeout=VALUE CommandExecutionTimeout (in seconds) - The time to allow a command to finish before timing out. Overrides the default execution timeout in the configuration of 2700 seconds. '0' for infinite starting in 0.10.4. -c, --cache, --cachelocation, --cache-location=VALUE CacheLocation - Location for download cache, defaults to %TEMP% or value in chocolatey.config file. --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build AllowUnofficialBuild - When not using the official build you must set this flag for choco to continue. --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output FailOnStandardError - Fail on standard error output (stderr), typically received when running external commands during install providers. This overrides the feature failOnStandardError. --use-system-powershell UseSystemPowerShell - Execute PowerShell using an external process instead of the built-in PowerShell host. Should only be used when internal host is failing. Available in 0.9.10+. --no-progress Do Not Show Progress - Do not show download progress percentages. Available in 0.10.4+. --proxy=VALUE Proxy Location - Explicit proxy location. Overrides the default proxy location of ''. Available for config settings in 0.9.9.9+, this CLI option available in 0.10.4+. --proxy-user=VALUE Proxy User Name - Explicit proxy user (optional). Requires explicity proxy (`--proxy` or config setting). Overrides the default proxy user of ''. Available for config settings in 0.9.9.9+, this CLI option available in 0.10.4+. --proxy-password=VALUE Proxy Password - Explicit proxy password (optional) to be used with username. Requires explicity proxy (`--proxy` or config setting) and user name. Overrides the default proxy password (encrypted in settings if set). Available for config settings in 0.9.9.9+, this CLI option available in 0.10.4+. --proxy-bypass-list=VALUE ProxyBypassList - Comma separated list of regex locations to bypass on proxy. Requires explicity proxy (`--proxy` or config setting). Overrides the default proxy bypass list of ''. Available in 0.10.4+. --proxy-bypass-on-local Proxy Bypass On Local - Bypass proxy for local connections. Requires explicity proxy (`--proxy` or config setting). Overrides the default proxy bypass on local setting of 'True'. Available in 0.10.4+. --log-file=VALUE Log File to output to in addition to regular loggers. Available in 0.1- 0.8+.Chocolatey v0.10.8]]></content>
  </entry>
  <entry>
    <title><![CDATA[python的isinstance方法]]></title>
    <url>%2F2018%2F01%2F12%2Fpython%E7%9A%84isinstance%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Python的isinstance方法12&gt;&gt;&gt; dir(isinstance)['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__'] 123456789&gt;&gt;&gt; help(isinstance)Help on built-in function isinstance in module builtins:isinstance(obj, class_or_tuple, /) Return whether an object is an instance of a class or of a subclass thereof. A tuple, as in ``isinstance(x, (A, B, ...))``, may be given as the target to check against. This is equivalent to ``isinstance(x, A) or isinstance(x, B) or ...`` etc. isinstance 用法12345&gt;&gt;&gt; isinstance(1, int)True&gt;&gt;&gt; isinstance("risk2s", str)True&gt;&gt;&gt;]]></content>
      <categories>
        <category>编程技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Windows10无法使用系统的调节亮度功能]]></title>
    <url>%2F2018%2F01%2F10%2FWindows10%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%B0%83%E8%8A%82%E4%BA%AE%E5%BA%A6%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[##Windows10无法调节亮度 查看电脑是否安装teamviewer等监控软件。 卸载它自带的驱动 方法如下 在菜单栏里选择 其他 &gt; 选项 &gt; 高级 &gt; “高级网络设置” &gt; “卸载…” 即可 卸载它的监控驱动吧。 ##感激https://www.zhihu.com/question/33767047]]></content>
      <categories>
        <category>电脑故障</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS7安装Python3.6]]></title>
    <url>%2F2018%2F01%2F10%2FCentOS7%E5%AE%89%E8%A3%85Python3-6%2F</url>
    <content type="text"><![CDATA[安装python3.6可能使用的依赖1yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel gcc 下载python3.6编译安装到python官网下载https://www.python.org下载最新版源码，使用make altinstall，如果使用make install，在系统中将会有两个不同版本的Python在/usr/bin/目录中。这将会导致很多问题，而且不好处理。1wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz 1tar -xzvf Python-3.6.0.tgz -C /tmp 1cd /tmp/Python-3.6.0/ 把Python3.6安装到 /usr/local 目录1./configure --prefix=/usr/local 1make 1make altinstall python3.6程序的执行文件：/usr/local/bin/python3.6python3.6应用程序目录：/usr/local/lib/python3.6pip3的执行文件：/usr/local/bin/pip3.6pyenv3的执行文件：/usr/local/bin/pyenv-3.6 更改/usr/bin/python链接1cd/usr/bin 1mv python python.backup 1ln -s /usr/local/bin/python3.6 /usr/bin/python 1ln -s /usr/local/bin/python3.6 /usr/bin/python3 更改yum脚本的python依赖1cd /usr/bin 1ls yum* 1yum yum-config-manager yum-debug-restore yum-groups-manager 1yum-builddep yum-debug-dump yumdownloader 更改以上文件头为1#!/usr/bin/python 改为 #!/usr/bin/python2 修改gnome-tweak-tool配置文件12# vi /usr/bin/gnome-tweak-tool#!/usr/bin/python 改为 #!/usr/bin/python2 修改urlgrabber配置文件1# vi /usr/libexec/urlgrabber-ext-down 1#!/usr/bin/python 改为 #!/usr/bin/python2]]></content>
      <categories>
        <category>编程技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[我的世界开始]]></title>
    <url>%2F2018%2F01%2F09%2F%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E5%BC%80%E5%A7%8B%2F</url>
    <content type="text"><![CDATA[我的blog欢迎你的到来！ origin]]></content>
      <categories>
        <category>生活随记</category>
      </categories>
      <tags>
        <tag>起始</tag>
      </tags>
  </entry>
</search>
